#!/bin/sh

cleanup() {
	#abduco | awk '$(NF) ~ '"/^$SVTM_SESSION-[0-9]+$/"' { printf "kill %d\n", $(NF-1) }' | sh
	if [ -d "$SVTM_MASTER_DIR" ]; then
		rm -r "$SVTM_MASTER_DIR"
	fi
}

die() {
	echo "$0: $*" 1>&2
	exit 1
}

# lowest available number from stdin starting from 1
# similar behavior to open(3) - opens lowest file descriptor
lowest() {
	sort -n | awk 'NR != $1 { i = NR; exit } END { print i ? i : NR+1 }'
}

# name of the new session
SVTM_SESSION="${1:-svtm}"
SVTM_DIR="$HOME/.local/run/svtm/$SVTM_SESSION"
export SVTM_SESSION SVTM_DIR

# create the master
if [ -z "$SVTM_MASTER" ] || [ -z "$SVTM_MASTER_DIR" ]; then
	if [ -d "$SVTM_DIR/master" ]; then
		MASTER=$(ls "$SVTM_DIR/master" | lowest)
	else
		MASTER=1
	fi
	SVTM_MASTER="$SVTM_SESSION-master-$MASTER"
	SVTM_MASTER_DIR="$SVTM_DIR/master/$MASTER"
	export SVTM_MASTER_DIR SVTM_MASTER

	mkdir -p "$SVTM_MASTER_DIR"
	echo 1 >  "$SVTM_MASTER_DIR/focus"
fi


# three conditions to handle:
# 	- creating the master
# 		- create slaves if they don't exist
# 		- recursively call svtm
#	- svtm was recursivly called
# 		- attach to slave

# this is true when svtm is recursively called(see last few lines)
if echo "$ABDUCO_SESSION" | grep -q "$SVTM_SESSION-master-[0-9]\+"; then
	# attach to the slave(s)
	while
		# idgaf
		until
			read f < "$SVTM_MASTER_DIR/focus" && [ -n "$f" ] && [ -d "$SVTM_DIR/$f" ]
		do 
			# svtm-ctl {prev,next} returns false if there's
			# only one session left
			if svtm-ctl prev; then
				:
			else
				echo "$0: no more sessions"
				exit 0
			fi
		done
		# PID of abduco client is different from actual backend process spawned
		# we use `echo $$ > ... && exec ...` to keep track of PID of client
		sh -c 'echo $$ > "$SVTM_MASTER_DIR/pid";
			exec abduco -a "$SVTM_SESSION-$0"' "$f" || [ $? -eq 143 ];
		
	do
		rm -f "$SVTM_MASTER_DIR/pid"
	done
	die "could not attach to session '$SVTM_SESSION-$f'"
fi 2>/dev/null 

trap 'cleanup' INT TERM

(cat > "$SVTM_MASTER_DIR/config") << "EOF"
^Gj
	svtm-ctl next\n

^Gk
	svtm-ctl prev\n

^Gc
	svtm-ctl create\n

^Ge
	svtm-ctl edit\n

^Gu
	svtm-ctl scroll 40\n

^Gd
	svtm-ctl scroll -40\n
EOF

# check whether slaves of the session exist
if
	abduco | awk 'NR!=1 && $(NF) ~ /^'"$SVTM_SESSION"'(-[0-9]+)?$/ { m=1 }
		END { exit(m ? 0 : 1) }'
then
	: # there are slaves
else
	# no slaves - create
	seq 1 | while read i; do
		abduco -fn "$SVTM_SESSION-$i" svtm-vt "$SVTM_DIR/$i"
	done
fi

# recursive call to svtm($0)
abduco -A "$SVTM_MASTER" sh -c "sthkd '$SVTM_MASTER_DIR/config' -p '$0' | sh"
cleanup
