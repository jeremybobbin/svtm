#!/bin/sh

cleanup() {
	if [ -d "$SVTM_MASTER_DIR" ]; then
		rm -r "$SVTM_MASTER_DIR"
	fi
}

die() {
	echo "$0: $*" 1>&2
	exit 1
}

# lowest available number from stdin starting from 1
# similar behavior to open(3) - opens lowest file descriptor
lowest() {
	sort -n | awk 'NR != $1 { i = NR; exit } END { print i ? i : NR+1 }'
}

# we use `echo $$ > ... && exec ...` to keep track of PID
pidfile() {
	file="$1"; shift
	sh -c "echo \$\$ > '$file'; exec $*"
}

# conditions to handle:
# 	- creating the master
# 		- create slaves if they don't exist
# 		- recursively call svtm
#	- svtm was recursivly called
# 		- attach to slave

# assert that session is not recursive
if [ -n "$SVTM_SESSION" ] && \
	echo "$ABDUCO_SESSION" | grep -Eq "^$SVTM_SESSION-[0-9]+$"; then
	die "abduco session '$ABDUCO_SESSION' already open"
fi

trap 'cleanup' INT

# this is true when svtm is recursively called(see last few lines)
if [ -n "$SVTM_MASTER_DIR" ]; then
	# necessary for ^Gq
	echo $$ > "$SVTM_MASTER_DIR/pid"

	# attach to the slave(s)
	while
		# idgaf
		until
			[ -f "$SVTM_MASTER_DIR/focus" ] && read f < "$SVTM_MASTER_DIR/focus" && \
				[ -n "$f" ] && [ -d "$SVTM_DIR/$f" ]
		do 
			# svtm-ctl {prev,next} returns false if there's
			# only one session left
			if svtm-ctl prev 2>/dev/null; then
				:
			else
				cleanup
				exit 0
			fi
		done
		# if abduco can't attach, then the 'svtm-ctl' process that died did not remove its
		# directory
		# we need to remove the directory associated with the dead process
		if
			# PID of abduco client is different from actual backend process spawned
			pidfile "$SVTM_MASTER_DIR/view" abduco -a "$SVTM_SESSION-$f" 2>/dev/null
			exit=$?; [ "$exit" -ne 143 ]
		then
			rm -rf "$SVTM_DIR/$f"
		fi
	do
		rm -f "$SVTM_MASTER_DIR/view"
	done
	die "could not attach to session '$SVTM_SESSION-$f'"
	# unreachable
fi

SVTM=$$
SVTM_SESSION="${1:-svtm}" # name of new session
SVTM_DIR="$HOME/.local/run/svtm/$SVTM_SESSION"
if [ -d "$SVTM_DIR/master" ]; then
	MASTER=$(ls "$SVTM_DIR/master" | lowest)
else
	MASTER=1
fi
SVTM_MASTER_DIR="$SVTM_DIR/master/$MASTER"
export SVTM SVTM_MASTER_DIR SVTM_SESSION SVTM_DIR

# initialize the master
mkdir -p "$SVTM_MASTER_DIR"
echo 1 >  "$SVTM_MASTER_DIR/focus"

# check whether slaves of the session exist
if
	abduco | awk 'NR!=1 && $(NF) ~ /^'"$SVTM_SESSION"'(-[0-9]+)?$/ { m=1 }
		END { exit(m ? 0 : 1) }'
then
	: # there are slaves
else
	# no slaves - create
	abduco -fn "$SVTM_SESSION-1" svtm-vt "$SVTM_DIR/1"
fi

(cat > "$SVTM_MASTER_DIR/config") << "EOF"
^Gj
	svtm-ctl next\n

^Gk
	svtm-ctl prev\n

^Gc
	svtm-ctl create\n

^Ge
	svtm-ctl edit\n

^Gu
	svtm-ctl scroll 40\n

^Gd
	svtm-ctl scroll -40\n

^Gq
	svtm-ctl quit\n

^Gx
	svtm-ctl close\n
EOF

# recursive call to svtm($0)
sthkd "$SVTM_MASTER_DIR/config" -p "$0" | sh 2>/dev/null
cleanup
